package lesson7;

import java.util.Random;

public class App7 {
    //1. Расширить задачу про котов и тарелки с едой
    //2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды
    //   (например, в миске 10 еды, а кот пытается покушать 15-20)
    //3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true
    //4. Считаем, что если коту мало еды в тарелке, то он ее просто не трогает,
    //   то есть не может быть наполовину сыт (это сделано для упрощения логики программы)
    //5. Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль
    //6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку
    public static void main(String[] args) {
        Random rand = new Random();

        Cat[] cats = {
                new Cat("Барсик", (rand.nextInt(4)+1)*5),
                new Cat("Васька", (rand.nextInt(4)+1)*5),
                new Cat("Рваное ухо", (rand.nextInt(4)+1)*5),
                new Cat("Задира", (rand.nextInt(4)+1)*5),
                new Cat("Соня", (rand.nextInt(4)+1)*5)
        };

        Plate p = new Plate(60);

        System.out.println("До еды все коты были голодные, принесли тарелку " + p);
        for (Cat cat : cats) {
            System.out.println(cat);
        }

        System.out.println("Кто успел тот поел:");
        for (int i = 0; i < cats.length; i++) {
            cats[rand.nextInt(cats.length)].eat(p);
        }

        System.out.println("После еды в тарелке осталось " + p);
        for (Cat cat : cats) {
            System.out.println(cat);
        }

    }
}
